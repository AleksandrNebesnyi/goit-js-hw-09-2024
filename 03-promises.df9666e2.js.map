{"mappings":"AACA,MAAMA,EAAQC,SAASC,cAAc,SAmCrC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAS,CAACC,EAASC,KAC5B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAG1BA,EAAM,G,CA5CKJ,SAASC,cAAc,yBAE/BW,iBAAiB,SAG3B,SAAuBC,GACrB,IAAIC,EAAW,GACfD,EAAME,iBACS,IAAIC,SAASjB,GAEnBkB,SAAQ,CAACC,EAAMC,KACtBL,EAAWK,GAAKD,CAAK,IAUrB,MAAOd,MAAAgB,EAAKC,KAACA,EAAIC,OAAEA,GAAQR,EAG/B,IAAK,IAAIS,EAAI,EAAGA,EAAID,EAAQC,GAAG,EAAG,CAEhCrB,EAAcqB,EAAE,EADKH,EAAQG,EAAIF,GACDG,MAAK,EAACrB,SAACA,EAAQC,MAAEA,MAChDqB,QAAQC,IAAI,uBAAqBvB,QAAiBC,MAAU,IAAMuB,OAAM,EAACxB,SAACA,EAAQC,MAAEA,MACpFqB,QAAQC,IAAI,sBAAoBvB,QAAiBC,MAAU,G,KAoB9DqB,QAAQC,IAAI","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst formEl= document.querySelector('.form');\nconst submitBtn = document.querySelector('button[type=\"submit\"]');\n\nsubmitBtn.addEventListener('click', onPressSubmit);\n\n\nfunction onPressSubmit(event) {\n  let formValues={};\n  event.preventDefault();\n  const formData=new FormData(formEl);\n\n  formData.forEach((value,key) => {\n    formValues[key]=value\n  });\n\n\n  // const delay = parseInt(formData.get('delay'));\n  // const step = parseInt(formData.get('step'));\n  // const amount = parseInt(formData.get('amount'));\n\n  // for (let [name, value] of formData) {\n  //   formValues[name] = value};\n    const {delay,step, amount}=formValues;\n\n     \nfor (let i = 0; i < amount; i+=1) {\n  const currentDelay = delay + i * step;\n  createPromise(i+1,currentDelay).then(({position, delay})=>\n  {console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);}).catch(({position, delay})=>\n  {console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });  \n}  \n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject)=>{\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay})\n      } else {\n        reject({position, delay})\n      }\n    \n    }, delay);\n\n  })  \n}\nconsole.log('promise');\n\n\n\n\n\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","formValues","preventDefault","FormData","forEach","value","key","delay1","step","amount","i","then","console","log","catch"],"version":3,"file":"03-promises.df9666e2.js.map"}